name: CI
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
run-name: ${{inputs.run-name}}
on:
  push:
    branches: "**"
  pull_request:
    types: [opened, synchronize]
  workflow_call:
    inputs:
      run-name:
        required: false
        description: "Name of the workflow"
        type: string
      deno-enabled:
        required: false
        description: "Install deno, default to false"
        type: boolean

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  FORCE_COLOR: "1"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: elcoosp/ghca-node-pnpm@v1.10
        with:
          deno-enabled: ${{ inputs.deno-enabled }}
      - run: pnpm check
      - run: pnpm build
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: packages/**/dist/*

  test:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18, 20]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: elcoosp/ghca-node-pnpm@v1.10
        with:
          node-version: ${{ matrix.node }}
          deno-enabled: ${{ inputs.deno-enabled }}
      - run: pnpm test

  test-coverage:
    name: Test coverage
    runs-on: ubuntu-latest
    steps:
      - uses: elcoosp/ghca-node-pnpm@v1.10
        with:
          deno-enabled: ${{ inputs.deno-enabled }}
      - run: pnpm test:cov
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build, test, test-coverage]
    steps:
      - uses: elcoosp/ghca-node-pnpm@v1.10
      - uses: actions/download-artifact@v4
        with:
          name: dist
      - name: Release
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm ci:publish
          version: pnpm ci:version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
